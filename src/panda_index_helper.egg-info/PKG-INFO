Metadata-Version: 2.4
Name: panda-index-helper
Version: 1.0.0
Summary: A powerful MCP server for quickly enabling and configuring Serena coding agent tools in specified projects
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/panda-index-helper
Project-URL: Documentation, https://github.com/yourusername/panda-index-helper#readme
Project-URL: Repository, https://github.com/yourusername/panda-index-helper
Project-URL: Issues, https://github.com/yourusername/panda-index-helper/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mcp>=1.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=13.0.0
Requires-Dist: psutil>=5.9.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: pre-commit>=3.0.0; extra == "dev"
Dynamic: license-file

# Panda Index Helper MCP Server

一个强大的 MCP 服务器，用于在指定项目中快速启用和配置 Serena 编码代理工具。

## 🚀 特性

- **一键启用**：通过简单的 `@mcp` 调用即可在项目中启用 Serena
- **自动配置**：自动检测项目结构并生成合适的配置文件
- **智能管理**：支持项目状态查询、配置编辑和服务管理
- **跨平台**：支持 Windows、macOS 和 Linux
- **IDE 集成**：与 Cursor、VSCode、IntelliJ 等主流 IDE 无缝集成

## 🎯 系统要求

- Python 3.8 或更高版本
- 支持 MCP 协议的客户端（如 Cursor、VSCode 等）
- 网络连接（用于下载 Serena）

## 🛠️ 安装

### 方法 1：通过 pip 安装（推荐）

```bash
pip install panda-index-helper
```

### 方法 2：通过 uv 安装

```bash
uv pip install panda-index-helper
```

### 方法 3：从源码安装

```bash
git clone https://github.com/yourusername/panda-index-helper
cd panda-index-helper
pip install -e .
```

## ⚙️ 配置

### 1. 在 Cursor 中配置

编辑你的 MCP 配置文件（通常在 `~/.cursor/mcp.json`）：

```json
{
  "mcpServers": {
    "panda-index-helper": {
      "command": "panda-index-helper",
      "args": ["start-mcp-server"]
    }
  }
}
```

### 2. 在其他 IDE 中配置

#### VSCode
在设置中添加：
```json
{
  "mcp.servers": {
    "panda-index-helper": {
      "command": "panda-index-helper",
      "args": ["start-mcp-server"]
    }
  }
}
```

#### IntelliJ
在 MCP 插件配置中添加服务器配置。

## 🎯 使用方法

### 基础用法

#### 启用当前项目的 Serena
```
@mcp panda-index-helper
```

#### 在指定项目中启用 Serena
```
@mcp panda-index-helper --project /path/to/your/project
```

#### 查询服务状态
```
@mcp panda-index-helper --status
```

#### 编辑配置
```
@mcp panda-index-helper --config
```

### 高级用法

#### 强制重新安装
```
@mcp panda-index-helper --force
```

#### 指定 Serena 上下文
```
@mcp panda-index-helper --context ide-assistant
```

#### 批量操作多个项目
```
@mcp panda-index-helper --batch /path/to/project1 /path/to/project2
```

## 🔧 配置选项

### 全局配置

配置文件位置：`~/.panda-index-helper/config.yml`

```yaml
# 默认 Serena 上下文
default_context: "ide-assistant"

# 默认安装方式
install_method: "uv"  # 可选: "uv", "pip"

# 日志级别
log_level: "INFO"  # 可选: "DEBUG", "INFO", "WARNING", "ERROR"

# 自动启动服务
auto_start: true

# 端口配置
port: 24282
```

### 项目配置

每个项目会自动生成 `.panda-index-helper/project.yml`：

```yaml
project_name: "my-project"
serena_context: "ide-assistant"
read_only: false
included_tools:
  - find_symbol
  - read_file
  - execute_shell_command
  - list_dir
excluded_tools: []
```

## 📁 项目结构

```
your-project/
├── .panda-index-helper/
│   ├── project.yml          # 项目配置
│   ├── serena_config.yml    # Serena 配置
│   └── logs/                # 日志文件
├── src/
├── tests/
└── README.md
```

## 🔍 故障排除

### 常见问题

#### 1. 安装失败
**问题**：无法安装 Serena
**解决方案**：
- 检查网络连接
- 确保 Python 版本兼容
- 尝试使用 `--force` 参数

#### 2. 服务启动失败
**问题**：MCP 服务器无法启动
**解决方案**：
- 检查端口是否被占用
- 查看日志文件获取详细错误信息
- 重启 IDE 客户端

#### 3. 项目检测失败
**问题**：无法检测到项目结构
**解决方案**：
- 确保在正确的项目目录中
- 检查项目是否包含必要的文件（如 README.md、package.json 等）
- 手动指定项目路径

### 环境检查

运行兼容性检查脚本：
```bash
python check_compatibility.py
```

这个脚本会检查：
- Python 版本兼容性
- 系统环境信息
- 依赖库状态
- 安装工具可用性
- 项目环境状态

### 兼容性检查

在安装和使用之前，强烈建议运行兼容性检查：

```bash
# 检查环境兼容性
python check_compatibility.py

# 如果发现问题，脚本会提供详细的解决建议
```

### 日志查看

日志文件位置：`~/.panda-index-helper/logs/`

```bash
# 查看最新日志
tail -f ~/.panda-index-helper/logs/latest.log

# 查看错误日志
grep "ERROR" ~/.panda-index-helper/logs/latest.log
```

## 🚀 快速开始

### 1. 安装 Panda Index Helper
```bash
pip install panda-index-helper
```

### 2. 检查环境兼容性
```bash
python check_compatibility.py
```

### 3. 配置 MCP 客户端
在 Cursor 中添加配置（见配置部分）

### 4. 重启 IDE
重启你的 IDE 以加载新的 MCP 配置

### 5. 启用 Serena
在项目目录中运行：
```
@mcp panda-index-helper
```

### 6. 开始使用
Serena 现在已经在你的项目中启用了！你可以使用所有 Serena 的工具来分析和编辑代码。

## 📚 更多资源

- [Serena 官方文档](https://github.com/oraios/serena)
- [MCP 协议文档](https://modelcontextprotocol.io/)
- [Cursor 文档](https://cursor.sh/docs)
- [问题反馈](https://github.com/yourusername/panda-index-helper/issues)

## 🤝 贡献

欢迎贡献代码、报告问题或提出建议！

### 开发环境设置
```bash
git clone https://github.com/yourusername/panda-index-helper
cd panda-index-helper
pip install -e ".[dev]"
pre-commit install
```

### 运行测试
```bash
# 运行完整测试
python test_mcp_server.py

# 运行简单测试
python test_simple_mcp.py

# 运行兼容性检查
python check_compatibility.py

# 运行单元测试
pytest tests/
```

## 📄 许可证

本项目采用 MIT 许可证 - 详见 [LICENSE](LICENSE) 文件。

## 🙏 致谢

- [Serena](https://github.com/oraios/serena) - 强大的编码代理工具
- [MCP](https://modelcontextprotocol.io/) - 模型上下文协议
- 所有贡献者和用户

---

**版本**：1.0.0  
**最后更新**：2025-01-27  
**维护者**：Your Name
