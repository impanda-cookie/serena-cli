name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      test_pypi:
        description: 'Publish to Test PyPI first'
        required: false
        default: true
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e .
        pip install -e ".[dev,test]"
    
    - name: Run tests
      run: |
        pytest --cov=serena_cli --cov-report=xml
    
    - name: Run type checking
      run: |
        mypy src/
    
    - name: Check code quality
      run: |
        black --check src/ tests/
        isort --check-only src/ tests/
        flake8 src/ tests/
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload to Test PyPI
      if: github.event.inputs.test_pypi != 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/
    
    - name: Upload to PyPI
      if: github.event.inputs.test_pypi == 'false' || startsWith(github.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          This release includes:
          - Full CLI functionality for Serena management
          - MCP server integration
          - Project detection and configuration
          - Comprehensive documentation in Chinese and English
          - Cross-platform installation support
          
          ## Installation
          
          ```bash
          pip install serena-cli
          ```
          
          ## Quick Start
          
          ```bash
          serena-cli check-env
          serena-cli info
          serena-cli status
          ```
          
          See [README.md](README.md) for full documentation.
        draft: false
        prerelease: false
